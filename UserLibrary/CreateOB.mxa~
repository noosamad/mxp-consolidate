PROCEDURE reportScript
API_START
... seclist is the various sections that will be used in profit and loss and balance sheet reports
... plan to move this out to ini file or transaction model later
DEFAULT seclist[1]='Bank'
DEFAULT seclist[2]='Receivables'
DEFAULT seclist[3]='Other Current Asset'
DEFAULT seclist[4]='Fixed Assets'
DEFAULT seclist[5]='Payables'
DEFAULT seclist[6]='Other Current Liability'
DEFAULT seclist[7]='Equity'
DEFAULT seclist[8]='Income'
DEFAULT seclist[9]='Cost of Goods Sold'
DEFAULT seclist[10]='Expenses'
DEFAULT seclist[11]='Other Income'
DEFAULT seclist[12]='Other Expense'
... pnlseclist defines which section are used in Profit and Loss, again this can be either an ini file or a transaction model
... the items in this list MUST exist in seclist
DEFAULT pnlseclist[1]='Income'
DEFAULT pnlseclist[2]='Cost of Goods Sold'
DEFAULT pnlseclist[3]='Expenses'
DEFAULT pnlseclist[4]='Other Income'
DEFAULT pnlseclist[5]='Other Expense'
... bsseclist defines which sections used in Balance Sheet, again this can be either an ini file or a transaction model
... the items in this list MUST exist in seclist
DEFAULT bsseclist[1]='Bank'
DEFAULT bsseclist[2]='Receivables'
DEFAULT bsseclist[3]='Other Current Assets'
DEFAULT bsseclist[4]='Fixed Assets'
DEFAULT bsseclist[5]='Payables'
DEFAULT bsseclist[6]='Other Current Liability'
DEFAULT bsseclist[7]='Equity'
... initial list arrays used to store the COA data
DEFAULT accname[1]=''
DEFAULT accsection[1]=''
DEFAULT acctype[1]=''
DEFAULT accparent[1]=''
PROJECT #_apiLibrary
MODEL 'CommonCOA'
... load all the data from the trasnaction model into list variables
READ MEMORY 'All'
accname=SERIES3
accsection=SERIES4
acctype=SERIES5
accparent=SERIES6
nritems=ITEMSINFO('accname','ITEMS')
...
... create Profit and Loss Measures List
...
mcount=0
quot='''
...loop through each account belonging to the balance sheet section list to build the logic entries for each measure
... Each section will have a header entry and at the end a total measure
... All DETAIL items will consolidated into a SECTION or into a SUMMARY level
FOR j,1,ITEMSINFO('bsseclist','ITEMS'),1
    ... create the section heading entry and initialise the section total logic
    indent=0
    mcount=mcount+1
    measurelist[mcount]=bsseclist[j]
    mexpression[mcount]=' '
    mindent[mcount]=indent
    mhide[mcount]='hideData'
    mbold[mcount]=1
    secexpression=' '
    ... loop through finding all accounts belonging to this section
    FOR k,1,nritems,1
        WHEN accsection[k] EQ bsseclist[j]
            indent=4
            mcount=mcount+1
            measurelist[mcount]=accname[k]
            mhide[mcount]='showData'
            mbold[mcount]=0
            mexpression[mcount]=' '
            ... if this is directly below SECTION then add it to the SECTION expression
            ... otherwise it is DETAIL subaccount, so indent further
            WHEN accparent[k] EQ bsseclist[j]
                secexpression=concat(secexpression,'+',quot,accname[k],quot)
            ELSE
                indent=8
            ENDWHEN
            mindent[mcount]=indent
            ... if this is a SUMMARY account, find all the accounts belonging to it and add them to the expression
            ... for this measure
            SWITCH
            	CASE lowercase(acctype[k]) EQ 'summary'
            		mbold[mcount]=1
            		subseca=accname[k]
            		FOR m,1,nritems,1
            			WHEN accparent[m] EQ subseca
                        		mexpression[mcount]=concat(mexpression[mcount],'+',quot,accname[m],quot)
                        	ENDWHEN
                        ENDFOR
                CASE lowercase(acctype[k]) EQ 'detail'
                	mbold[mcount]=0
                	mexpression[mcount]=' '
            ENDSWITCH
        ENDWHEN
    ENDFOR
... end of SECTION so create the section total measure
    mcount=mcount+1
    measurelist[mcount]=concat('Total ',bsseclist[j])
    mindent[mcount]=0
    mhide[mcount]='showData'
    mbold[mcount]=1
    mexpression[mcount]=secexpression
... create bs calcs at correct place
    SWITCH
    CASE measurelist[mcount] eq 'Total Other Current Assets'
        mcount=mcount+1
        measurelist[mcount]='Total Current Assets'
        mindent[mcount]=0
        mhide[mcount]='showData'
        mbold[mcount]=1
        mexpression[mcount]=concat(quot,'Total Bank',quot,'+',quot,'Total Receivables',quot,'+',quot,'Total Other Current Assets',quot)
    CASE measurelist[mcount] eq 'Total Fixed Assets'
        mcount=mcount+1
        measurelist[mcount]='Total Assets'
        mindent[mcount]=0
        mhide[mcount]='showData'
        mbold[mcount]=1
        mexpression[mcount]=concat(quot,'Total Current Assets',quot,'+',quot,'Total Fixed Assets',quot)
    CASE measurelist[mcount] eq 'Total Other Current Liability'
        mcount=mcount+1
        measurelist[mcount]='Total Liabilities'
        mindent[mcount]=0
        mhide[mcount]='showData'
        mbold[mcount]=1
        mexpression[mcount]=concat(quot,'Total Payables',quot,'+',quot,'Total Other Current Liability',quot)        
        mcount=mcount+1
        measurelist[mcount]='Net Assets'
        mindent[mcount]=0
        mhide[mcount]='showData'
        mbold[mcount]=1
        mexpression[mcount]=concat(quot,'Total Assets',quot,'-',quot,'Total Liabilities',quot)
    CASE measurelist[mcount] eq 'Total Equity'
        mcount=mcount+1
        measurelist[mcount]=measurelist[mcount-1]
        mindent[mcount]=mindent[mcount-1]
        mhide[mcount]=mhide[mcount-1]
        mbold[mcount]=mbold[mcount-1]
        mexpression[mcount]=mexpression[mcount-1]
        measurelist[mcount-1]='Net Income'
        mindent[mcount-1]=4
        mhide[mcount-1]='showData'
        mbold[mcount-1]=0
.        mexpression[mcount-1]=concat('Profit_and_Loss','.',quot,'Net Profit',quot)
	mexpression[mcount-1]=' '
        mexpression[mcount]=concat(mexpression[mcount],'+',quot,'Net Income',quot)
    ENDSWITCH
ENDFOR
... Update the Profit and Loss model with the new measures
PROJECT #_apiLibrary
MODEL 'OpeningBalances'
api_measure
     with dimension = 'measure'
     with option = 'ADD'
     with sourceMember = measurelist
     with expression = mexpression
     with measureIndent = mindent
     with hide = mhide
     with measureBold = mbold
API_END
RETURN