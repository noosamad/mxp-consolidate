PROCEDURE reportScript
.///////////////////////////////////////////////////////////////////////////////
.// Procedure: CreateBS
.// Author: Greg Parsons
.// This procedure creates the measure logic for the Balance Sheet model using
.// the detail in the CommonCOA table. 
.// 
.///////////////////////////////////////////////////////////////////////////////
API_START
... initial list arrays used to store the COA data
DEFAULT accname[1]=' '
DEFAULT accsection[1]=' '
DEFAULT acctype[1]=' '
DEFAULT accparent[1]=' '
.// These are the default settings for idump and reset
.// to change these edit the deafults.ini file in the projects USERDATA folder
.// set idump = 1 if you require additional information dumped when the script 
.//               is run
.// set ireset = 1 if you want the script to delete all existing measures and
.//               rebuild from scratch (useful if you need to delete and start
.//               again
DEFAULT idump=0
DEFAULT ireset=1
.// retrieve the seclist, bsslist and pnllist arrays
_STORAGE='sections'
READ STORAGE
_STORAGE='defaults'
READ STORAGE
COPYHTML <B>Building Balance Sheet model for project 
COPYHTML #_apilibrary
COPYHTML </B></BR>
PROJECT #_apiLibrary
MODEL 'CommonCOA'
... load all the data from the trasnaction model into list variables
READ MEMORY 'All'
accname=SERIES3
accsection=SERIES4
acctype=SERIES5
accparent=SERIES6
nritems=ITEMSINFO('accname','ITEMS')
...
... create Balance Sheet Measures List
...
mcount=0
quot='''
...loop through each account belonging to the balance sheet section list to build the logic entries for each measure
... Each section will have a header entry and at the end a total measure
... All DETAIL items will consolidated into a SECTION or into a SUMMARY level
FOR j,1,ITEMSINFO('bsseclist','ITEMS'),1
    ... create the section heading entry and initialise the section total logic
    indent=0
    mcount=mcount+1
    measurelist[mcount]=bsseclist[j]
    mexpression[mcount]=' '
    mindent[mcount]=indent
    mhide[mcount]='hideData'
    mbold[mcount]=1
    mperiodoption[mcount]='Sum'
    secexpression=' '
    ... loop through finding all accounts belonging to this section
    FOR k,1,nritems,1
        WHEN accsection[k] EQ bsseclist[j]
            indent=4
            mcount=mcount+1
            measurelist[mcount]=accname[k]
            mhide[mcount]='showData'
            mbold[mcount]=0
            mexpression[mcount]=' '
            mperiodoption[mcount]='LastPeriod'
            ... if this is directly below SECTION then add it to the SECTION expression
            ... otherwise it is DETAIL subaccount, so indent further
            WHEN accparent[k] EQ bsseclist[j]
                secexpression=concat(secexpression,'+',quot,accname[k],quot)
            ELSE
                indent=8
            ENDWHEN
            mindent[mcount]=indent
            ... if this is a SUMMARY account, find all the accounts belonging to it and add them to the expression
            ... for this measure
            SWITCH
            	CASE lowercase(acctype[k]) EQ 'summary'
            		mbold[mcount]=1
            		subseca=accname[k]
            		FOR m,1,nritems,1
            			WHEN accparent[m] EQ subseca
                        		mexpression[mcount]=concat(mexpression[mcount],'+',quot,accname[m],quot)
                        	ENDWHEN
                        ENDFOR
                CASE lowercase(acctype[k]) EQ 'detail'
                	mbold[mcount]=0
                	mexpression[mcount]=concat('PREVIOUS(',quot,measurelist[mcount],quot,')+OpeningBalances.',quot,measurelist[mcount],quot,'+Trial_Balance.',quot,measurelist[mcount],quot,'*ElimFlags.',quot,measurelist[mcount],quot,'[1]')
                	mperiodoption[mcount]='LastPeriod'
            ENDSWITCH
        ENDWHEN
    ENDFOR
... end of SECTION so create the section total measure
    mcount=mcount+1
    measurelist[mcount]=concat('Total ',bsseclist[j])
    mindent[mcount]=0
    mhide[mcount]='showData'
    mbold[mcount]=1
    mexpression[mcount]=secexpression
    mperiodoption[mcount]='LastPeriod'
... create bs calcs at correct place
    SWITCH
    CASE measurelist[mcount] eq 'Total Other Current Assets'
        mcount=mcount+1
        measurelist[mcount]='Total Current Assets'
        mindent[mcount]=0
        mhide[mcount]='showData'
        mbold[mcount]=1
        mexpression[mcount]=concat(quot,'Total Bank',quot,'+',quot,'Total Receivables',quot,'+',quot,'Total Other Current Assets',quot)
        mperiodoption[mcount]='LastPeriod'
    CASE measurelist[mcount] eq 'Total Fixed Assets'
        mcount=mcount+1
        measurelist[mcount]='Total Assets'
        mindent[mcount]=0
        mhide[mcount]='showData'
        mbold[mcount]=1
        mexpression[mcount]=concat(quot,'Total Current Assets',quot,'+',quot,'Total Fixed Assets',quot)
        mperiodoption[mcount]='LastPeriod'
    CASE measurelist[mcount] eq 'Total Other Current Liability'
        mcount=mcount+1
        measurelist[mcount]='Total Liabilities'
        mindent[mcount]=0
        mhide[mcount]='showData'
        mbold[mcount]=1
        mexpression[mcount]=concat(quot,'Total Payables',quot,'+',quot,'Total Other Current Liability',quot)
        mperiodoption[mcount]='LastPeriod'        
        mcount=mcount+1
        measurelist[mcount]='Net Assets'
        mindent[mcount]=0
        mhide[mcount]='showData'
        mbold[mcount]=1
        mexpression[mcount]=concat(quot,'Total Assets',quot,'-',quot,'Total Liabilities',quot)
        mperiodoption[mcount]='LastPeriod'
    CASE measurelist[mcount] eq 'Total Equity'
        mcount=mcount+1
        measurelist[mcount]=measurelist[mcount-1]
        mindent[mcount]=mindent[mcount-1]
        mhide[mcount]=mhide[mcount-1]
        mbold[mcount]=mbold[mcount-1]
        mexpression[mcount]=mexpression[mcount-1]
        mperiodoption[mcount]=mperiodoption[mcount-1]
        measurelist[mcount-1]='Net Income'
        mindent[mcount-1]=4
        mhide[mcount-1]='showData'
        mbold[mcount-1]=0
        mexpression[mcount-1]=concat('PREVIOUS(',quot,measurelist[mcount-1],quot,')+Profit_and_Loss','.',quot,'Net Profit',quot)
        mexpression[mcount]=concat(mexpression[mcount],'+',quot,'Net Income',quot)
    ENDSWITCH
ENDFOR
... Update the Balance Sheet model with the new measures
PROJECT #_apiLibrary
MODEL 'Balance Sheet'
modcount=0
addcount=0
oldlist=_MODELMEASURES
oldcnt=ITEMSINFO('oldlist','ITEMS')
savoldcnt=oldcnt
savstr=oldlist[1]
WHEN ireset EQ 1
	oldlist[1]=''
	api_measure
		with dimension = 'measure'
		with option = 'DELETE'
		with sourcemember = oldlist
	DELETE variable oldlist
	oldlist[1]=savstr
	oldcnt=1
ENDWHEN
SWITCH 
	CASE oldcnt LE 1 and oldlist[1] EQ 'HiddenDummyMeasure'
		api_measure
		with dimension = 'measureandconsolidated'
		with option = 'ADD'
		with sourceMember = measurelist
		with expression = mexpression
		with measureIndent = mindent
		with hide = mhide
		with measureBold = mbold
		with periodoption = mperiodoption
		addcount=mcount
		WHEN idump EQ 1
			FOR n,1,mcount,1
				msg=concat('Measure "',measurelist[n],'" processed with option ADD</BR>')
				COPYHTML #msg
			ENDFOR
		ENDWHEN
	OTHERWISE
		FOR j,1,mcount,1
			smname=measurelist[j]
			smexpression=mexpression[j]
			smindent=mindent[j]
			smhide=mhide[j]
			smbold=mbold[j]
			smafter=' '
			smperiodoption=mperiodoption[j]
			WHEN inlist(smname,'oldlist',1,'MATCH') GT 0
				option='modify'
			ELSE
				option='add'
				WHEN j GT 1
					smafter=measurelist[j-1]
				ELSE
					smafter='HiddenDummyMeasure'
				ENDWHEN
			ENDWHEN
			WHEN idump EQ 1
				msg=concat('Measure "',measurelist[j],'" processed with option ',option,'</BR>')
				COPYHTML #msg
			ENDWHEN
			SWITCH
				CASE option EQ 'add'
					addcount=addcount + 1
					api_measure
					with dimension = 'measureandconsolidated'
					with option = #option
					with sourceMember = smname
					with expression = smexpression
					with measureIndent = smindent
					with hide = smhide
					with measureBold = smbold
					with aftermember = smafter
					with periodoption = smperiodoption
				CASE option EQ 'modify'
					modcount=modcount + 1
					api_measure
					with dimension = 'measureandconsolidated'
					with option = #option
					with sourceMember = smname
					with expression = smexpression
					with measureIndent = smindent
					with hide = smhide
					with measureBold = smbold
					with periodoption =smperiodoption
			ENDSWITCH
		ENDFOR
ENDSWITCH
msg1=concat('There were ',savoldcnt-1,' existing measures in the model</BR>')
msg2=concat(addcount,' New Measures have been added</BR>')
msg3=concat(modcount,' Measures have been modified</BR>')
COPYHTML #msg1
WHEN ireset EQ 1
	COPYHTML Reset mode is on, all existing measures deleted</BR>
ELSE
	COPYHTML Reset mode is off, existing accounts will be updated</BR>
ENDWHEN
COPYHTML #msg2
COPYHTML #msg3
API_END
RETURN
