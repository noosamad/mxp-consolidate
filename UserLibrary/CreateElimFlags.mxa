PROCEDURE reportScript
API_START
... initial list arrays used to store the COA data
DEFAULT accname[1]=' '
DEFAULT accsection[1]=' '
DEFAULT acctype[1]=' '
DEFAULT accparent[1]=' '
DEFAULT accflag[1]=0
.// These are the default settings for idump and reset
.// to change these edit the deafults.ini file in the projects USERDATA folder
.// set idump = 1 if you require additional information dumped when the script 
.//               is run
.// set ireset = 1 if you want the script to delete all existing measures and
.//               rebuild from scratch (useful if you need to delete and start
.//               again
DEFAULT idump=0
DEFAULT ireset=1
.// retrieve the seclist, bsslist and pnllist arrays
_STORAGE='sections'
READ STORAGE
_STORAGE='defaults'
READ STORAGE
COPYHTML <B>Building ElimFlags model for project 
COPYHTML #_apilibrary
COPYHTML </B></BR>
PROJECT #_apiLibrary 
MODEL 'CommonCOA'
... load all the data from the trasnaction model into list variables
READ MEMORY 'All'
accname=SERIES3
accsection=SERIES4
acctype=SERIES5
accparent=SERIES6
accflag=SERIES8
nritems=ITEMSINFO('accname','ITEMS')
...
... create ElimFlags Measures List
...
mcount=0
quot='''
...loop through each account to determine the items which are DETAIL items 
... only details items need outputting as valid measures for eliminations
FOR j,1,nritems,1
    ... loop through finding all accounts belonging to this section
    WHEN lowercase(acctype[j]) EQ 'detail'
            mcount=mcount+1
            measurelist[mcount]=accname[j]
            mhide[mcount]='showData'
            mbold[mcount]=0
            mindent[mcount]=0
            mexpression[mcount]=' '
            mflag[mcount]=accflag[j]
    ENDWHEN
ENDFOR
... Update the ElimsFlag model with the new measures
PROJECT #_apiLibrary
MODEL 'ElimFlags' WRITE
	modcount=0
	addcount=0
	oldlist=_MODELMEASURES
	oldcnt=ITEMSINFO('oldlist','ITEMS')
	savoldcnt=oldcnt
	savstr=oldlist[1]
	WHEN ireset EQ 1
		oldlist[1]=''
		api_measure
			with dimension = 'measure'
			with option = 'DELETE'
			with sourcemember = oldlist
		DELETE variable oldlist
		oldlist[1]=savstr
		oldcnt=1
	ENDWHEN
	SWITCH 
		CASE oldcnt LE 1 and oldlist[1] EQ 'HiddenDummyMeasure'
			api_measure
			with dimension = 'measure'
			with option = 'ADD'
			with sourceMember = measurelist
			with expression = mexpression
			with measureIndent = mindent
			with hide = mhide
			with measureBold = mbold
			addcount=mcount
			WHEN idump EQ 1
				FOR n,1,mcount,1
					msg=concat('Measure "',measurelist[n],'" processed with option ADD</BR>')
					COPYHTML #msg
				ENDFOR
			ENDWHEN
		OTHERWISE
			FOR j,1,mcount,1
				smname=measurelist[j]
				smexpression=mexpression[j]
				smindent=mindent[j]
				smhide=mhide[j]
				smbold=mbold[j]
				smafter=' '
				WHEN inlist(smname,'oldlist',1,'MATCH') GT 0
					option='modify'
				ELSE
					option='add'
					WHEN j GT 1
						smafter=measurelist[j-1]
					ELSE
						smafter='HiddenDummyMeasure'
					ENDWHEN
				ENDWHEN
				WHEN idump EQ 1
					msg=concat('Measure "',measurelist[j],'" processed with option ',option,'</BR>')
					COPYHTML #msg
				ENDWHEN
				SWITCH
					CASE option EQ 'add'
						addcount=addcount + 1
						api_measure
						with dimension = 'measure'
						with option = #option
						with sourceMember = smname
						with expression = smexpression
						with measureIndent = smindent
						with hide = smhide
						with measureBold = smbold
						with aftermember = smafter
					CASE option EQ 'modify'
						modcount=modcount + 1
						api_measure
						with dimension = 'measure'
						with option = #option
						with sourceMember = smname
						with expression = smexpression
						with measureIndent = smindent
						with hide = smhide
						with measureBold = smbold
				ENDSWITCH
			ENDFOR
	ENDSWITCH
msg1=concat('There were ',savoldcnt-1,' existing measures in the model</BR>')
msg2=concat(addcount,' New Measures have been added</BR>')
msg3=concat(modcount,' Measures have been modified</BR>')
COPYHTML #msg1
WHEN ireset EQ 1
	COPYHTML Reset mode is on, all existing measures deleted</BR>
ELSE
	COPYHTML Reset mode is off, existing accounts will be updated</BR>
ENDWHEN
COPYHTML #msg2
COPYHTML #msg3
CLOSE DATABASE
.//Now set all the flag values
PROJECT #_apiLibrary
MODEL 'ElimFlags' WRITE
LOCATEMXD BY 'version','measure'
CurVersion='Actual'
FOR j,1,mcount,1
CurAcct=measurelist[j]
	locatemxd create noerror at #CurVersion, #CurAcct
	amount[1]=mflag[j]
ENDFOR
API_END
RETURN
