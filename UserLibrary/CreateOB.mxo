PROCEDURE reportScript
.///////////////////////////////////////////////////////////////////////////////
.// Procedure: CreateOB
.// Author: Greg Parsons
.// This procedure creates the measure logic for the Opening Balances model using
.// the detail in the CommonCOA table. 
.// 
.///////////////////////////////////////////////////////////////////////////////
DEFAULT taskstatus=0
DEFAULT taskstatdesc=' '
API_START
... initial list arrays used to store the COA data
DEFAULT accname[1]=' '
DEFAULT accsection[1]=' '
DEFAULT acctype[1]=' '
DEFAULT accparent[1]=' '
.// These are the default settings for idump and reset
.// to change these edit the deafults.ini file in the projects USERDATA folder
.// set idump = 1 if you require additional information dumped when the script 
.//               is run
.// set ireset = 1 if you want the script to delete all existing measures and
.//               rebuild from scratch (useful if you need to delete and start
.//               again
DEFAULT idump=0
DEFAULT ireset=1
.// retrieve the seclist, bsslist and pnllist arrays
_STORAGE='sections'
READ STORAGE
_STORAGE='defaults'
READ STORAGE
COPYHTML <B>Building Opening Balance model for project 
COPYHTML #_apilibrary
COPYHTML </B></BR>
PROJECT #_apiLibrary
MODEL 'CommonCOA'
... load all the data from the trasnaction model into list variables
READ MEMORY 'All'
WHEN ITEMSINFO('SERIES1','ITEMS') NE 0
	accname=SERIES3
	accsection=SERIES4
	acctype=SERIES5
	accparent=SERIES6
	nritems=ITEMSINFO('accname','ITEMS')
	...
	... create Profit and Loss Measures List
	...
	mcount=0
	quot='''
	...loop through each account belonging to the balance sheet section list to build the logic entries for each measure
	... Each section will have a header entry and at the end a total measure
	... All DETAIL items will consolidated into a SECTION or into a SUMMARY level
	FOR j,1,ITEMSINFO('bsseclist','ITEMS'),1
	    ... create the section heading entry and initialise the section total logic
	    indent=0
	    mcount=mcount+1
	    measurelist[mcount]=bsseclist[j]
	    mexpression[mcount]=' '
	    mindent[mcount]=indent
	    mhide[mcount]='hideData'
	    mbold[mcount]=1
	    mperiodoption[mcount]='SUM'
	    secexpression=' '
	    ... loop through finding all accounts belonging to this section
	    FOR k,1,nritems,1
		WHEN accsection[k] EQ bsseclist[j]
		    indent=4
		    mcount=mcount+1
		    measurelist[mcount]=accname[k]
		    mhide[mcount]='showData'
		    mbold[mcount]=0
		    mexpression[mcount]=' '
		    mperiodoption[mcount]='SUM'
		    ... if this is directly below SECTION then add it to the SECTION expression
		    ... otherwise it is DETAIL subaccount, so indent further
		    WHEN accparent[k] EQ bsseclist[j]
			secexpression=concat(secexpression,'+',quot,accname[k],quot)
		    ELSE
			indent=8
		    ENDWHEN
		    mindent[mcount]=indent
		    ... if this is a SUMMARY account, find all the accounts belonging to it and add them to the expression
		    ... for this measure
		    SWITCH
			CASE lowercase(acctype[k]) EQ 'summary'
				mbold[mcount]=1
				subseca=accname[k]
				FOR m,1,nritems,1
					WHEN accparent[m] EQ subseca
						mexpression[mcount]=concat(mexpression[mcount],'+',quot,accname[m],quot)
					ENDWHEN
				ENDFOR
			CASE lowercase(acctype[k]) EQ 'detail'
				mbold[mcount]=0
				mexpression[mcount]=' '
		    ENDSWITCH
		ENDWHEN
	    ENDFOR
	... end of SECTION so create the section total measure
	    mcount=mcount+1
	    measurelist[mcount]=concat('Total ',bsseclist[j])
	    mindent[mcount]=0
	    mhide[mcount]='showData'
	    mbold[mcount]=1
	    mexpression[mcount]=secexpression
	    mperiodoption[mcount]='SUM'
	... create bs calcs at correct place
	    SWITCH
	    CASE measurelist[mcount] eq 'Total Other Current Assets'
		mcount=mcount+1
		measurelist[mcount]='Total Current Assets'
		mindent[mcount]=0
		mhide[mcount]='showData'
		mbold[mcount]=1
		mexpression[mcount]=concat(quot,'Total Bank',quot,'+',quot,'Total Receivables',quot,'+',quot,'Total Other Current Assets',quot)
		mperiodoption[mcount]='SUM'
	    CASE measurelist[mcount] eq 'Total Fixed Assets'
		mcount=mcount+1
		measurelist[mcount]='Total Assets'
		mindent[mcount]=0
		mhide[mcount]='showData'
		mbold[mcount]=1
		mexpression[mcount]=concat(quot,'Total Current Assets',quot,'+',quot,'Total Fixed Assets',quot)
		mperiodoption[mcount]='SUM'
	    CASE measurelist[mcount] eq 'Total Other Current Liability'
		mcount=mcount+1
		measurelist[mcount]='Total Liabilities'
		mindent[mcount]=0
		mhide[mcount]='showData'
		mbold[mcount]=1
		mexpression[mcount]=concat(quot,'Total Payables',quot,'+',quot,'Total Other Current Liability',quot)
		mperiodoption[mcount]='SUM'
		mcount=mcount+1
		measurelist[mcount]='Net Assets'
		mindent[mcount]=0
		mhide[mcount]='showData'
		mbold[mcount]=1
		mexpression[mcount]=concat(quot,'Total Assets',quot,'-',quot,'Total Liabilities',quot)
		mperiodoption[mcount]='SUM'
	    CASE measurelist[mcount] eq 'Total Equity'
		mcount=mcount+1
		measurelist[mcount]=measurelist[mcount-1]
		mindent[mcount]=mindent[mcount-1]
		mhide[mcount]=mhide[mcount-1]
		mbold[mcount]=mbold[mcount-1]
		mexpression[mcount]=mexpression[mcount-1]
		mperiodoption[mcount]='SUM'
		measurelist[mcount-1]='Net Income'
		mindent[mcount-1]=4
		mhide[mcount-1]='showData'
		mbold[mcount-1]=0
		mexpression[mcount-1]=' '
		mexpression[mcount]=concat(mexpression[mcount],'+',quot,'Net Income',quot)
		mperiodoption[mcount-1]='SUM'
	    ENDSWITCH
	ENDFOR
	UpdateModelMeasures
		with modelname='OpeningBalances'
		with dimname='Measure'
		with measurelist=measurelist
		with mexpression=mexpression
		with mindent=mindent
		with mhide=mhide
		with mbold=mbold
		with mperiodoption=mperiodoption
		with ireset=ireset
		with idump=idump
	taskstatus=1
	FORMAT DATE 'DD-MM-YYYY' FOR _today
	FORMAT '99:99:99' FOR _time
	DECODE _TODAY INTO taskdate TYPE TEXT AT 1 TO 10
	DECODE _TIME INTO tasktime TYPE TEXT AT 1 TO 8
	taskstatdesc=concat('Last run on ',taskdate,' at ',tasktime)
ELSE
	COPYHTML You must load the Common Chart of Accounts before you can create the Opening Balances Model
	taskstatus=0
	taskstatdesc='Not run'
ENDWHEN
API_END
RETURN